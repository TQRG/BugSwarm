plugins {
	id 'me.champeau.gradle.jmh' version '0.2.0'
}

apply plugin: 'me.champeau.gradle.jmh'

jmh {
	iterations = 5
	fork = 2
	warmupIterations = 1
	warmupForks = 1
	benchmarkMode = 'AverageTime'
	humanOutputFile = null
	timeUnit = 'ns'
	jvmArgs = "-javaagent:$rootProject.projectDir/stagemonitor-javaagent/build/libs/stagemonitor-javaagent-${version}.jar " +
			"-javaagent:$rootProject.projectDir/stagemonitor-benchmark/stagemonitor-byte-buddy-agent/build/libs/stagemonitor-byte-buddy-agent-${version}.jar"
	include = ['.*ProfilerBenchmark.*']
//	profilers = ['HS_GC']
}

jmhJar.dependsOn << ':stagemonitor-javaagent:jar' << ':stagemonitor-benchmark:stagemonitor-byte-buddy-agent:jar'

dependencies {
	compile project(":stagemonitor-web")
	compile project(":stagemonitor-logging")
	compile project(":stagemonitor-ehcache")
	compile project(":stagemonitor-benchmark:stagemonitor-byte-buddy-agent")
	compile 'org.apache.commons:commons-io:1.3.2'
	compile "org.slf4j:slf4j-simple:$slf4jVersion"
	compile "org.elasticsearch:elasticsearch:$esVersion"
}

task exportConfigurationOptions(dependsOn: 'classes', type: JavaExec) {
	main = 'org.stagemonitor.ConfigurationSourceExporter'
	classpath = sourceSets.test.runtimeClasspath
	args "$buildDir/configuration-options.json"
}

task exportMarkdownConfigurationOptions(dependsOn: 'classes', type: JavaExec) {
	main = 'org.stagemonitor.ConfigurationOptionsMarkdownExporter'
	classpath = sourceSets.test.runtimeClasspath
}
