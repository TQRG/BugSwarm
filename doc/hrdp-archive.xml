<chapter><title>HRDP Archive</title>
<sect1><title>HRDP Archive Scanner</title>
<sect2><title>Usage</title>
<para>
The HRDP Archive Scanner is a command line application that preferably runs as
a cron task. It is invoked as</para>
<para>hrdp-archive-scanner.sh [OPTIONS] instance_name pathtm|pp</para>
<para>the only option is -l t</para>
<para>Example:</para>
<screen>
hrdp-archive-scanner.sh -l 2000 Ops pathtm
</screen>
<itemizedlist>
	<listitem><emphasis>instance_name</emphasis> Specifies the instance of the HRDP (Ops or Sim). The configuration file archive.properties, specifies the directory where the telemetry is stored. On the SDM Kernel computer the location is usually /archive/Ops/PathTm. The archive is organized The HRDP archive is organized in a hierarchy like:
	<para><filename>year/day_of_year/hour/five_minutes_interval.dat</filename></para></listitem>
	<listitem><emphasis>-l t</emphasis>lossTime in miliseconds. If the distance in time between the two subsequent apparitions of a packet is greater with lossTime than the expected packet rate, it is treated as a packet loss and a new interval is started
 </listitem>
</itemizedlist>
<para>For example:</para>
<screen>
nm@whirl:~/hrdp_archive> ls -lR 2007/212
2007/212:
total 0
drwxr-xr-x 2 nm users 240 2006-10-27 18:48 10
drwxr-xr-x 2 nm users 176 2006-11-07 17:02 11

2007/212/10:
total 2658
-rw-r--r-- 1 nm users  20748 2006-10-27 18:19 rt_15_19.dat
-rw-r--r-- 1 nm users 519346 2006-10-27 18:24 rt_20_24.dat
-rw-r--r-- 1 nm users 613200 2006-10-27 18:30 rt_25_29.dat
-rw-r--r-- 1 nm users 613200 2006-10-27 18:35 rt_30_34.dat
-rw-r--r-- 1 nm users 613200 2006-10-27 18:40 rt_35_39.dat
-rw-r--r-- 1 nm users 329084 2006-10-27 18:48 rt_40_44.dat

2007/212/11:
total 1561
-rw-r--r-- 1 nm users 351568 2006-11-07 16:49 rt_40_44.dat
-rw-r--r-- 1 nm users 613200 2006-11-07 16:55 rt_45_49.dat
-rw-r--r-- 1 nm users 613200 2006-11-07 17:00 rt_50_54.dat
-rw-r--r-- 1 nm users  12826 2006-11-07 17:02 rt_55_59.dat
</screen>
Each file contains raw packets, each packet consisting of a 10 bytes "hrdp header" followed by a ccsds packet.
The HRDP Archive Scanner stores the index in two PostgreSQL tables:
<screen>
CREATE TABLE %TABLE_NAME% (
   packet VARCHAR( 255 ) NOT NULL ,
   interval INTERVAL NOT NULL ,
   no INT NOT NULL ,
   first TIMESTAMP WITH TIME ZONE NOT NULL ,
   last TIMESTAMP WITH TIME ZONE NOT NULL ,
   PRIMARY KEY ( packet , first )
);

CREATE TABLE %TABLE_NAME%_scan_date (
   year INT NOT NULL ,
   day INT NOT NULL ,
   scan_date TIMESTAMP WITH TIME ZONE NOT NULL ,
   PRIMARY KEY ( year , day )
);
</screen>
The first table (e.g. ops_pathtm) is used to store the index of packets
   present in the archive. Each record represents a continuously received
   chunk of data and has the following fields:
<itemizedlist>
<listitem><emphasis>packet</emphasis> - is the packet ops name detected from the MDB based on the (CCSDS APID, CCSDS Packet ID) combination. If a packet is not in the MDB, then the string Unknown_APID_PktID is used instead.</listitem>
<listitem><emphasis>interval</emphasis> - the interval between two packets. This is detected by the Scanner based on the apparition of the first two consecutive packets. The auto detected interval between packets is the main mechanism to find gaps in the telemetry stream. If a subsequent packet is received whose distance from the previous packet is greater that the detected interval plus/minus 2 seconds, then it is considered that a gap is present and a new record is started. Maximum length of an interval is 120 seconds. Packets being more than 120 seconds apart are saved as individual records.</listitem>
<listitem><emphasis>first</emphasis> - the timestamp of the first packet in the interval</listitem>
<listitem><emphasis>last</emphasis> - the timestamp of the last packet in the interval.</listitem>
</itemizedlist>
<para>
The second table is used to store the scanning date for the given date. The
   one day granularity has been chosen in order to reduce the number of
   records in this table and still to not need to re-scan too much of the
   archive.
</para>
When the HRDP Archive Scanner runs, it performs these operations:
<orderedlist>
<listitem>Checks the file modification time against the scan_date table and find the file modified corresponding to the oldest packet generation time. The archive has to be re-scanned at least starting at this point, we call it t0. Remove all the records from the database following t0.</listitem>
<listitem>For each record that was ongoing at t0 (that means last+interval > t0), remove the record and store it as a record to be continued.</listitem>
<listitem>Scan the archive by reading each packet and building in memory the records. As soon as one record is considered completed (see above for the condition), write the record into the database.</listitem>
<listitem>The Archive Scanner makes use of the Postgresql transactions, such that the changes to the database become visible to external parties only after the archive has been completely scanned. This is required because as explained above a change in the middle of the archive will result in re-scanning of all the subsequent files.</listitem>
</orderedlist>
</sect2>
<sect2><title>Configuration</title>
The HRDP Archive Scanner looks uses the Yamcs java classes for accessing the mission database (in order to find packet names), and uses the archive.properities file for the settings of the Postgresql database.
</sect2>
</sect1>

<sect1><title>HRDP Replay Server</title>
<sect2><title>Configuration</title>
TBW
</sect2>
</sect1>
</chapter>
