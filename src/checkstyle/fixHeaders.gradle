ext {
	headerTemplate = new File('src/checkstyle/checkstyle-header.txt')
			.text
			.replaceAll(/\^\\Q|\\E\$|\^\$|\^\.\*\$/, '')
			.replaceFirst(/\\E20\\d\\d\(\\-20\\d\\d\)\?\\Q/, '{year}')
			.trim() + System.lineSeparator()  + System.lineSeparator()


	now = Calendar.instance.get(Calendar.YEAR) as String

	groupPackage = "$group".replaceAll(/\./, '\\.')
}

task fixHeaders << {
	fileTree("${buildDir}/reports/checkstyle").include('*.xml').each { report ->
		def xml = new XmlParser(false, false).parse(report)
		xml.file.each {
			if (it.error.@source == ['com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck']) {
				def years = now
				def file = new File(it.@name)
				def line
				file.withReader { reader ->
					while (line = reader.readLine()) {
						def matcher = line =~ /Copyright (20\d\d)(?:-20\d\d)?/
						if (matcher.count) {
							years = matcher[0][1]
							if (years != now) {
								years = years + "-$now"
							}
							break
						}
					}
				}

				def header = headerTemplate.replaceFirst(/\{year}/, years)

				def sourceCode = file.text
				sourceCode = sourceCode.replaceFirst(/(?s)(?:.*)(package ${groupPackage}.*)/,
						"${header}\$1")
				file.write(sourceCode)
				println "Header fixed for $file"
			}
		}
	}
}
